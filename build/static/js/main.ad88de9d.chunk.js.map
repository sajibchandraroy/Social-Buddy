{"version":3,"sources":["components/Header/Header.js","components/Post/Post.js","components/Home/Home.js","components/Comment/Comment.js","components/PostDetail/PostDetail.js","components/NotFound/NotFound.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","color","menuButton","marginRight","spacing","title","fontFamily","display","breakpoints","up","search","position","borderRadius","shape","backgroundColor","fade","palette","common","white","marginLeft","width","searchIcon","padding","height","pointerEvents","alignItems","justifyContent","inputRoot","inputInput","paddingLeft","transition","transitions","create","Header","classes","className","AppBar","Toolbar","IconButton","edge","aria-label","Typography","variant","noWrap","to","InputBase","placeholder","input","inputProps","Post","props","post","id","body","minWidth","border","Box","ml","mr","mt","Card","CardContent","component","showSeeMore","CardActions","Button","Home","useState","allPost","setPost","useEffect","fetch","then","res","json","data","map","item","fontSize","pos","marginBottom","avatar","red","Comment","photos","setPhoto","comment","name","email","results","picture","mb","Avatar","src","medium","alt","PostDetail","postId","useParams","comments","setComments","Container","NotFound","App","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ad88de9d.chunk.js","sourcesContent":["import React from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport { fade, makeStyles } from '@material-ui/core/styles';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      flexGrow: 1,\r\n      color: 'white',\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n      flexGrow: 1,\r\n      fontFamily: 'cursive',\r\n      display: 'none',\r\n      [theme.breakpoints.up('sm')]: {\r\n        display: 'block',\r\n      },\r\n    },\r\n    search: {\r\n      position: 'relative',\r\n      borderRadius: theme.shape.borderRadius,\r\n      backgroundColor: fade(theme.palette.common.white, 0.15),\r\n      '&:hover': {\r\n        backgroundColor: fade(theme.palette.common.white, 0.25),\r\n      },\r\n      marginLeft: 0,\r\n      width: '100%',\r\n      [theme.breakpoints.up('sm')]: {\r\n        marginLeft: theme.spacing(1),\r\n        width: 'auto',\r\n      },\r\n    },\r\n    searchIcon: {\r\n      padding: theme.spacing(0, 2),\r\n      height: '100%',\r\n      position: 'absolute',\r\n      pointerEvents: 'none',\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n    },\r\n    inputRoot: {\r\n      color: 'inherit',\r\n    },\r\n    inputInput: {\r\n      padding: theme.spacing(1, 1, 1, 0),\r\n      // vertical padding + font size from searchIcon\r\n      paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n      transition: theme.transitions.create('width'),\r\n      width: '100%',\r\n      [theme.breakpoints.up('sm')]: {\r\n        width: '12ch',\r\n        '&:focus': {\r\n          width: '20ch',\r\n        },\r\n      },\r\n    },\r\n}));\r\n\r\nconst Header = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n      <div className={classes.root}>\r\n          <AppBar position=\"static\">\r\n              <Toolbar>\r\n                  <IconButton\r\n                    edge=\"start\"\r\n                    className={classes.menuButton}\r\n                    color=\"inherit\"\r\n                    aria-label=\"open drawer\">\r\n                      <MenuIcon />\r\n                  </IconButton>\r\n                  <Typography className={classes.title} variant=\"h6\" noWrap>\r\n                    Social Buddy\r\n                  </Typography>\r\n                  <div>\r\n                    <Link to={`/home`}><HomeIcon/></Link>              \r\n                  </div>\r\n                  <div className={classes.search}>            \r\n                      <div className={classes.searchIcon}>\r\n                        <SearchIcon />\r\n                      </div>\r\n                    <InputBase\r\n                      placeholder=\"Searchâ€¦\"\r\n                      classes={{\r\n                        root: classes.inputRoot,\r\n                        input: classes.inputInput,\r\n                      }}\r\n                      inputProps={{ 'aria-label': 'search' }}/>\r\n                  </div>\r\n              </Toolbar>\r\n          </AppBar>\r\n      </div>\r\n  );\r\n};\r\n\r\nexport default Header;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Link } from 'react-router-dom';\r\nimport { Box } from '@material-ui/core';\r\nimport './Post.css';\r\n\r\n\r\nconst Post = (props) => {\r\n    const {id, title, body} = props.post;\r\n    const useStyles = makeStyles({\r\n        root: {\r\n          minWidth: 345,\r\n          borderRadius: 20,\r\n          border: '1px solid black',                   \r\n        },   \r\n    });\r\n    const classes = useStyles();\r\n\r\n    return (              \r\n        <Box ml={25} mr = {25} mt ={5}>\r\n            <Card className={classes.root}>\r\n                <CardContent >\r\n                  <Typography variant=\"h5\" component=\"h2\" className=\"title\" >\r\n                    {title}\r\n                  </Typography>\r\n                  <Typography variant=\"body2\" component=\"p\">\r\n                    {body}\r\n                  </Typography>\r\n                </CardContent>\r\n                {\r\n                    props.showSeeMore &&\r\n                    <CardActions>\r\n                    <Link to={`/detail/${id}`} className=\"btn-see-more\">\r\n                        <Button variant=\"contained\" color=\"primary\">See More</Button>\r\n                    </Link>        \r\n                    </CardActions>\r\n                }    \r\n            </Card>\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default Post;","import React, { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport Post from '../Post/Post';\r\n\r\nconst Home = () => {\r\n    \r\n    const [allPost, setPost] = useState([]);\r\n\r\n    useEffect(() => {\r\n        fetch('https://jsonplaceholder.typicode.com/posts')\r\n        .then(res => res.json())\r\n        .then(data => setPost(data))\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <h1>Posts:</h1>\r\n            {        \r\n                allPost.map(item => <Post post = {item} showSeeMore={true}></Post>)\r\n            }            \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Home;","import React from 'react';\r\nimport { useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { useState } from 'react';\r\nimport { Avatar, Box } from '@material-ui/core';\r\nimport { red } from '@material-ui/core/colors';\r\nimport './Comment.css';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n      minWidth: 275,\r\n      borderRadius: 20, \r\n    },\r\n    title: {\r\n      fontSize: 14,\r\n    },\r\n    pos: {\r\n      marginBottom: 30,\r\n    },\r\n    avatar: {\r\n        backgroundColor: red[500],\r\n    },\r\n});\r\n\r\nconst Comment = (props) => {\r\n    const [photos, setPhoto] = useState([]);\r\n    const {name, body, email} = props.comment;\r\n\r\n    useEffect( () => {\r\n        fetch(`https://randomuser.me/api/`)\r\n        .then(res => res.json())\r\n        .then(data => setPhoto(data.results[0].picture))\r\n    }, [])\r\n\r\n    const classes = useStyles();\r\n    \r\n\r\n    return (\r\n        <Box ml={35} mr = {35} mb ={3} mt ={3} >\r\n          <Card className={classes.root} variant=\"outlined\">\r\n            <CardContent className=\"list-item\">\r\n              <Avatar aria-label=\"recipe\" className={classes.avatar}>\r\n              <img src={photos.medium} alt=\"\"/>\r\n              </Avatar>\r\n              <Typography variant=\"h5\" component=\"h2\">{name}</Typography>\r\n              <Typography variant=\"body2\" component=\"p\">{body}</Typography>\r\n              <br/>\r\n              <Typography variant=\"body2\" component=\"p\">email: {email}</Typography>\r\n            </CardContent>      \r\n          </Card>\r\n        </Box>\r\n        \r\n    );\r\n};\r\n\r\nexport default Comment;","import React from 'react';\r\nimport { useParams, Link } from 'react-router-dom';\r\nimport { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport Post from '../Post/Post';\r\nimport Comment from '../Comment/Comment';\r\nimport { Box, Container } from '@material-ui/core';\r\nimport Button from '@material-ui/core/Button';\r\nimport './PostDetail.css';\r\n\r\nconst PostDetail = () => {\r\n    const {postId} = useParams();\r\n    const [post, setPost] = useState([]);\r\n    const [comments, setComments] = useState([]);\r\n    \r\n    useEffect(() => {\r\n        fetch(`https://jsonplaceholder.typicode.com/posts/${postId}`)\r\n        .then(res => res.json())\r\n        .then(data => setPost(data))\r\n    }, [])     \r\n\r\n    useEffect(() => {\r\n        fetch(`https://jsonplaceholder.typicode.com/comments?postId=${postId}`)\r\n        .then(res => res.json())\r\n        .then(data => setComments(data))\r\n    }, [])  \r\n    \r\n    return (\r\n    \r\n        <Container>\r\n            <Box>\r\n                <h1>Post Id : {postId}</h1>\r\n                <Post post={post} showSeeMore={false}></Post>\r\n            </Box>\r\n            <h1>Comments:</h1>\r\n            <Box>\r\n                {\r\n                    comments.map(item => <Comment comment = {item}></Comment>)\r\n                }                \r\n            </Box>\r\n            <Link to={`/home`} className=\"btn\">\r\n                <Button variant=\"contained\" color=\"primary\">\r\n                    Back to Home\r\n                </Button>\r\n            </Link>\r\n        </Container>\r\n    \r\n    \r\n    );\r\n};\r\n\r\nexport default PostDetail;\r\n","import React from 'react';\r\n\r\nconst NotFound = () => {\r\n    return (\r\n        <div>\r\n            <h2>Item not found</h2>\r\n            <h2>404 Error</h2>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NotFound;","import React from 'react';\r\nimport Header from './components/Header/Header'\r\nimport Home from './components/Home/Home';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link\r\n} from \"react-router-dom\";\r\nimport PostDetail from './components/PostDetail/PostDetail';\r\nimport NotFound from './components/NotFound/NotFound';\r\n\r\n\r\nfunction App() {\r\n    return (\r\n        <div>        \r\n            <Router>  \r\n                <Header></Header>  \r\n                <Switch>\r\n                    <Route exact path=\"/\">\r\n                        <Home></Home>\r\n                    </Route>\r\n                    <Route path=\"/home\">\r\n                        <Home></Home>\r\n                    </Route>                        \r\n                    <Route path=\"/detail/:postId\">\r\n                        <PostDetail></PostDetail>\r\n                    </Route>\r\n                    <Route path=\"*\">\r\n                        <NotFound/>\r\n                    </Route>                        \r\n                </Switch>\r\n            </Router>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}